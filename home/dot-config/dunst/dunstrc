# See dunst(5) for all configuration options

[global]
    ### Display ###

    # Which monitor should the notifications be displayed on.
    monitor = 0

    # Display notification on focused monitor.  Possible modes are:
    #   mouse: follow mouse pointer
    #   keyboard: follow window with keyboard focus
    #   none: don't follow anything
    #
    # "keyboard" needs a window manager that exports the
    # _NET_ACTIVE_WINDOW property.
    # This should be the case for almost all modern window managers.
    #
    # If this option is set to mouse or keyboard, the monitor option
    # will be ignored.
    follow = mouse

    ### Geometry ###

    # dynamic width from 0 to 300
    # width = (0, 300)
    # constant width of 300
    width = (250, 300)

    # The maximum height of a single notification, excluding the frame.
    height = 250

    # Position the notification in the top right corner
    origin = bottom-right

    # Offset from the origin
    offset = 18x18

    # Scale factor. It is auto-detected if value is 0.
    scale = 0

    # Maximum number of notification (0 means no limit)
    notification_limit = 5

    ### Progress bar ###

    # Turn on the progess bar. It appears when a progress hint is passed with
    # for example dunstify -h int:value:12
    progress_bar = true

    # Set the progress bar height. This includes the frame, so make sure
    # it's at least twice as big as the frame width.
    progress_bar_height = 8

    # Set the frame width of the progress bar
    progress_bar_frame_width = 0

    # Set the minimum width for the progress bar
    progress_bar_min_width = 225

    # Set the maximum width for the progress bar
    progress_bar_max_width = 225

    # Set round corners if you like
    progress_bar_corner_radius = 26
    
    # values: [left/center/right], default: center
    progress_bar_horizontal_alignment = center

    # Show how many messages are currently hidden (because of
    # notification_limit).
    indicate_hidden = yes

    # The transparency of the window.  Range: [0; 100].
    # This option will only work if a compositing window manager is
    # present (e.g. xcompmgr, compiz, etc.). (X11 only)
    transparency = 20

    # Draw a line of "separator_height" pixel height between two
    # notifications.
    # Set to 0 to disable.
    separator_height = 5

    # Padding between text and separator.
    padding = 8

    # Horizontal padding.
    horizontal_padding = 11

    # Padding between text and icon.
    text_icon_padding = 0

    # Defines width in pixels of frame around the notification window.
    # Set to 0 to disable.
    frame_width = 3

    # Defines color of the frame around the notification window.
     #frame_color = "#2D2D3C"

    # Define a color for the separator.
    # possible values are:
    #  * auto: dunst tries to find a color fitting to the background;
    #  * foreground: use the same color as the foreground;
    #  * frame: use the same color as the frame;
    #  * anything else 43c0addbe968be interpreted as a X color.
    separator_color = foreground

    # Sort messages by urgency.
    sort = yes

    # Don't remove messages, if the user is idle (no mouse or keyboard input)
    # for longer than idle_threshold seconds.
    # Set to 0 to disable.
    # A client can set the 'transient' hint to bypass this. See the rules
    # section for how to disable this if necessary
    idle_threshold = 120

    ### Text ###

    font = RobotoMono Nerd Font Medium 13

    # The spacing between lines.  If the height is smaller than the
    # font height, it will get raised to the font height.
    line_height = 1

    # Possible values are:
    # full: Allow a small subset of html markup in notifications:
    #        <b>bold</b>
    #        <i>italic</i>
    #        <s>strikethrough</s>
    #        <u>underline</u>
    #
    #        For a complete reference see
    #        <https://developer.gnome.org/pango/stable/pango-Markup.html>.
    #
    # strip: This setting is provided for compatibility with some broken
    #        clients that send markup even though it's not enabled on the
    #        server. Dunst will try to strip the markup but the parsing is
    #        simplistic so using this option outside of matching rules for
    #        specific applications *IS GREATLY DISCOURAGED*.
    #
    # no:    Disable markup parsing, incoming notifications will be treated as
    #        plain text. Dunst will not advertise that it has the body-markup
    #        capability if this is set as a global setting.
    #
    # It's important to note that markup inside the format option will be parsed
    # regardless of what this is set to.
    markup = full

    # The format of the message.  Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    #   %n  progress value if set without any extra characters
    #   %%  Literal %
    # Markup is allowed
    format = "<span color='#f1f1f0'><b>%s</b> </span><span color='#f1f1f0'><b>%n</b></span><span color='#ccccc8'>\n<i>%b</i></span>"

    # Alignment of message text.
    # Possible values are "left", "center" and "right".
    alignment = left

    # Vertical alignment of message text and icon.
    # Possible values are "top", "center" and "bottom".
    vertical_alignment = center

    # Show age of message if message is older than show_age_threshold
    # seconds.
    # Set to -1 to disable.
    show_age_threshold = 60

    # Specify where to make an ellipsis in long lines.
    # Possible values are "start", "middle" and "end".
    ellipsize = middle

    # Ignore newlines '\n' in notifications.
    ignore_newline = no

    # Stack together notifications with the same content
    stack_duplicates = true

    # Hide the count of stacked notifications with the same content
    hide_duplicate_count = false

    # Display indicators for URLs (U) and actions (A).
    show_indicators = no

    ### Icons ###

    # Align icons left/right/off
    icon_position = left

    # Scale small icons up to this size, set to 0 to disable. Helpful
    # for e.g. small files or high-dpi screens. In case of conflict,
    # max_icon_size takes precedence over this.
    min_icon_size = 64

    # Scale larger icons down to this size, set to 0 to disable
    max_icon_size = 90

    # Paths to default icons.
    icon_path = /home/avtr/.icons/Dracula

    # Recursice icon lookup
    enable_recursive_icon_lookup = true
    
    # Default icon theme
    icon_theme = Dracula

    ### History ###

    # Should a notification popped up from history be sticky or timeout
    # as if it would normally do.
    sticky_history = yes

    # Maximum amount of notifications kept in history
    history_length = 20

    ### Misc/Advanced ###

    # dmenu path.
    # dmenu = /usr/bin/dmenu -p dunst:

    # Browser for opening urls in context menu.
    browser = /usr/bin/firefox -new-tab

    # Always run rule-defined scripts, even if the notification is suppressed
    always_run_script = true

    # Define the title of the windows spawned by dunst
    title = Dunst

    # Define the class of the windows spawned by dunst
    class = Dunst

    # Define the corner radius of the notification window
    # in pixel size. If the radius is 0, you have no rounded
    # corners.
    # The radius will be automatically lowered if it exceeds half of the
    # notification height to avoid clipping text and/or icons.
    corner_radius = 4

    # Ignore the dbus closeNotification message.
    # Useful to enforce the timeout set by dunst configuration. Without this
    # parameter, an application may close the notification sent before the
    # user defined timeout.
    ignore_dbusclose = false

    ### Wayland ###
    # These settings are Wayland-specific. They have no effect when using X11

    # Uncomment this if you want to let notications appear under fullscreen
    # applications (default: overlay)
    # layer = top

    # Set this to true to use X11 output on Wayland.
    force_xwayland = false

    ### Legacy

    # Use the Xinerama extension instead of RandR for multi-monitor support.
    # This setting is provided for compatibility with older nVidia drivers that
    # do not support RandR and using it on systems that support RandR is highly
    # discouraged.
    #
    # By enabling this setting dunst will not be able to detect when a monitor
    # is connected or disconnected which might break follow mode if the screen
    # layout changes.
    force_xinerama = false

    ### mouse

    # Defines list of actions for each mouse event
    # Possible values are:
    # * none: Don't do anything.
    # * do_action: Invoke the action determined by the action_name rule. If there is no
    #              such action, open the context menu.
    # * open_url: If the notification has exactly one url, open it. If there are multiple
    #             ones, open the context menu.
    # * close_current: Close current notification.
    # * close_all: Close all notifications.
    # * context: Open context menu for the notification.
    # * context_all: Open context menu for all notifications.
    # These values can be strung together for each mouse event, and
    # will be executed in sequence.
    mouse_left_click = do_action, close_current #close_current
    mouse_middle_click = close_current
    mouse_right_click = close_all

# Experimental features that may or may not work correctly. Do not expect them
# to have a consistent behaviour across releases.
[experimental]
    # Calculate the dpi to use on a per-monitor basis.
    # If this setting is enabled the Xft.dpi value will be ignored and instead
    # dunst will attempt to calculate an appropriate dpi value for each monitor
    # using the resolution and physical size. This might be useful in setups
    # where there are multiple screens with very different dpi values.
    per_monitor_dpi = false


[urgency_low]
    # IMPORTANT: colors have to be defined in quotation marks.
    # Otherwise the "#" and following would be interpreted as a comment.
    background = "#2D2D3C"
    foreground ="#f29f6b"    
    timeout = 10
    frame_color ="#f29f6b"
    highlight ="#f29f6b"
    # Icon for notifications with low urgency, uncomment to enable
    default_icon = /home/avtr/.config/dunst/dunst-icons/universal-notification-bell-512.png

[urgency_normal]
    background = "#2D2D3C"
    foreground = "#43c0ad"
    timeout = 10
    frame_color = "#43c0ad"
    highlight = "#43c0ad"
    # Icon for notifications with normal urgency, uncomment to enable
    default_icon = /home/avtr/.config/dunst/dunst-icons/universal-notification-bell-512.png

[urgency_critical]
    background = "#2D2D3C"
    foreground = "#c04356"
    frame_color = "#c04356"
    highlight = "#c04356"
    timeout = 0
    # Icon for notifications with critical urgency, uncomment to enable
    default_icon = /home/avtr/.config/dunst/dunst-icons/universal-critical-notification-bell-512.png


# Notifications modifying 
#
# Without body
 [changeVolume]
    appname = changeVolume
    history_ignore = yes
    format = "<span color='#f1f1f0'><b>\n%s</b> </span><span color='#f1f1f0'><b>%n</b></span><span color='#ccccc8'>\n<i>%b</i></span>"

 [changeBrightness] #x11 only  
    appname = changeBrightness
    history_ignore = yes
    format = "<span color='#f1f1f0'><b>\n%s</b> </span><span color='#f1f1f0'><b>%n</b></span><span color='#ccccc8'>\n<i>%b</i></span>"   

  [changeBrightnessctl] #/home/$USER/wayland  
    appname = changeBrightnessctl
    history_ignore = yes
    format = "<span color='#f1f1f0'><b>\n%s</b> </span><span color='#f1f1f0'><b>%n</b></span><span color='#ccccc8'>\n<i>%b</i></span>"  
 
# With body
[udev-notify-joystick]
    appname = udev-notify-joystick
    history_ignore = yes
    [joystick-sound]
    summary = "Gamepad"
    body = "has been connected"
    script = "/home/avtr/.config/dunst/udev-notifications/udev-sound-notifications/joystick.sh"

[udev-notify-battery]
    appname = udev-notify-battery  
    history_ignore = yes
    [charging-battery-sound]
    body = "is charging"
    script = "/home/avtr/.config/dunst/udev-notifications/udev-sound-notifications/charging.sh"
    [discharging-battery-sound]
    body = "is discharging"
    script = "/home/avtr/.config/dunst/udev-notifications/udev-sound-notifications/discharging.sh"

[udev-notify-mouse]
    appname = udev-notify-mouse 
    history_ignore = yes
    [mouse-sound]
    summary = "Mouse"
    body = "has been connected"
    script = "/home/avtr/.config/dunst/udev-notifications/udev-sound-notifications/mouse.sh"

[udev-notify-disk]
    appname = udev-notify-disk
    history_ignore = no
    [disk-sound]
    summary = "USB flash drive"
    body = "has been connected"
    script = "/home/avtr/.config/dunst/udev-notifications/udev-sound-notifications/disk.sh" 

[udev-notify-headset]
    appname = udev-notify-headset
    history_ignore = no

[prtscr]
    appname = prtscr
    history_ignore = yes
    
[prtscr-w]
    appname = prtscr-w
    history_ignore = yes

[prtscr-s]
    appname = prtscr-s
    history_ignore = yes

[prtscr-c]
    appname = prtscr-c
    history_ignore = yes

[prtscr-cw]
    appname = prtscr-cw
    history_ignore = yes

[prtscr-cs]
    appname = prtscr-cs
    history_ignore = yes

[changeMicrophone]
    appname = changeMicrophone
    history_ignore = yes

[changeVolume-muted]
    appname = changeVolume-muted
    history_ignore = yes



# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
#
# Messages can be matched by
#    appname (discouraged, see desktop_entry)
#    body
#    category
#    desktop_entry
#    icon
#    match_transient
#    msg_urgency
#    stack_tag
#    summary
#
# and you can override the
#    background
#    foreground
#    format
#    frame_color
#    fullscreen
#    new_icon
#    set_stack_tag
#    set_transient
#    set_category
#    timeout
#    urgency
#    skip_display
#    history_ignore
#    action_name
#    word_wrap
#    ellipsize
#    alignment
#
# Shell-like globbing will get expanded.
#
# Instead of the appname filter, it's recommended to use the desktop_entry filter.
# GLib based applications export their desktop-entry name. In comparison to the appname,
# the desktop-entry won't get localized.
#
# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

# Disable the transient hint so that idle_threshold cannot be bypassed from the
# client
#[transient_disable]
#    match_transient = yes
#    set_transient = no
#
# Make the handling of transient notifications more strict by making them not
# be placed in history.
#[transient_history_ignore]
#    match_transient = yes
#    history_ignore = yes

# fullscreen values
# show: show the notifications, regardless if there is a fullscreen window opened
# delay: displays the new notification, if there is no fullscreen window active
#        If the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the notification will get
#           withdrawn from screen again and will get delayed like a new notification
#[fullscreen_delay_everything]
#    fullscreen = delay
#[fullscreen_show_critical]
#    msg_urgency = critical
#    fullscreen = show

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
#    # This notification will not be displayed
#    summary = "foobar"
#    skip_display = true

#[skip-display]
#    # This notification will not be displayed, but will be included in the history
#    summary = "foobar"
#    skip_display = yes

#[signed_on]
#    appname = Pidgin
#    summary = "*signed on*"
#    urgency = low
#
#[signed_off]
#    appname = Pidgin
#    summary = *signed off*
#    urgency = low
#
#[says]
#    appname = Pidgin
#    summary = *says*
#    urgency = critical
#
#[twitter]
#    appname = Pidgin
#    summary = *twitter.com*
#    urgency = normal
#
#[stack-volumes]
#    appname = "some_volume_notifiers"
#    set_stack_tag = "volume"
#
# vim: ft=cfg
#


